# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    groq.api_key: '%env(GROQ_API_KEY)%'
    groq.api_model: '%env(GROQ_API_MODEL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\OpenApi\ResourcesTagOpenApiFactory:
        decorates: 'api_platform.openapi.factory'
        decoration_priority: -10
        arguments:
            $decorated: '@App\OpenApi\ResourcesTagOpenApiFactory.inner'
            $resourceMetadataFactory: '@api_platform.metadata.resource.metadata_collection_factory'
            $resourceNameCollectionFactory: '@api_platform.metadata.resource.name_collection_factory'
        autoconfigure: false

    App\Security\ExtendedJWTAuthenticationSuccessHandler:
        arguments:
            $jwtManager: '@lexik_jwt_authentication.jwt_manager'
            $dispatcher: '@event_dispatcher'
            # Remove the cookie provider line if not using cookies
            $removeTokenFromBodyWhenCookiesUsed: '%env(bool:JWT_REMOVE_TOKEN_FROM_BODY_WHEN_COOKIES_USED)%'

    App\Service\TwoFactor\QrCode\QrUrlProvider\QrUrlProviderInterface:
        alias: App\Service\TwoFactor\QrCode\QrUrlProvider\QrServerUrlProvider

    # Override the default success handler
    lexik_jwt_authentication.handler.authentication_success:
        alias: App\Security\ExtendedJWTAuthenticationSuccessHandler

    App\Service\OpenApi\GroqService:
        arguments:
            $groqApiKey: '%groq.api_key%'
            $groqApiModel: '%groq.api_model%'

    App\EventListener\UserPasswordHasherListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }

    App\EventListener\JWTLoginSuccessListener:
        tags: [ { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess } ]
